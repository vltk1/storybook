{"version":3,"file":"PageAlls-mdx.dc5347c083ab68347516.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://demo/./stories/PageAlls.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsxDEV as _jsxDEV} from \"react/jsx-dev-runtime\";\nimport {useMDXComponents as _provideComponents} from \"C:\\\\Users\\\\duoci\\\\Desktop\\\\demo\\\\node_modules\\\\@storybook\\\\addon-docs\\\\dist\\\\shims\\\\mdx-react-shim\";\nimport {Meta, Canvas} from '@storybook/blocks';\nimport * as UseRenderCountStories from './PageAll.stories.tsx';\nimport StorySrc from './PageAll?raw';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(Meta, {\n      title: \"Example/PageAll\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 5,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h1, {\n      id: \"userendercount\",\n      children: \"useRenderCount\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 7,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"This is a test description\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 9,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(Canvas, {\n      of: UseRenderCountStories.Test,\n      source: {\n        code: StorySrc,\n        language: 'tsx'\n      },\n      sourceState: \"shown\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsxDEV(MDXLayout, Object.assign({}, props, {\n    children: _jsxDEV(_createMdxContent, props, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }), undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}